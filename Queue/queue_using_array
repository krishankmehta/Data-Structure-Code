//To implement a queue using array





#include<iostream>

using namespace std;


struct queue
{
    int front,rear,size;
    int capacity;
    int * array;
};


queue* create_queue(int capacity)
{
    queue* q = new queue;
    q->array = new int[capacity];
    q->capacity = capacity;
     q->size = 0;
    q->rear = -1;
    q->front = 0;
    return q;
}

void enque(int data,queue* q)
{
    if(q->size==q->capacity)
    {
        cout<<"The queue is full"<<endl;
        return;
    }
    ++q->rear;
    q->array[q->rear] = data;
    ++q->size;
}


int deque(queue *q)
{
    if(q->front==q->capacity)
    {
        cout<<"The queue is empty"<<endl;
    }
    
    int temp = q->array[q->front];
    ++q->front;
    return temp;
}

int front(queue* q)
{
    return q->array[q->front];
}

int rear(queue* q)
{
    return q->array[q->rear];
}

int main()
{
    queue* q = create_queue(10);
    enque(10,q);
    enque(20,q);
    enque(30,q);
    enque(40,q);
    enque(50,q);
    cout<<deque(q)<<endl;
    cout<<deque(q)<<endl;
    cout<<deque(q)<<endl;
    enque(60,q);
    enque(70,q);
    cout<<front(q)<<endl;
    cout<<rear(q)<<endl;
}
