//To implement stack using array





#include<iostream>


using namespace std;

struct stack
{
    int * array;
    int front;
    int back;
    int capacity;
};

stack* create_stack(stack* s, int size)
{
    s->front = 0;
    s->back = -1;
    s->capacity = size;
    s->array =  new int[size];
    return s;
}


bool isFull(stack* s)
{
    if(s->back==s->capacity)
    {
        return true;
    }
    
    else
    return false;
}
void push(stack* s,int data)
{
  if(isFull(s))
  {
      cout<<"Stack is full"<<endl;
  }
  (s->back)++;
  s->array[s->back] = data;
}



void display(stack* s)
{
    int count = -1;
    while(count!=s->back)
    {
        ++count;
        cout<<s->array[count]<<" ";
        
    }
    cout<<endl;
}

int top(stack *s)
{
    return s->array[s->back];
}

int pop(stack* s)
{
    int value = s->array[s->back];
    --s->back;
    return value;
}



int main()
{
    stack* s;
    int size = 10;
    s = create_stack(s,size);
    push(s,10);
    push(s,20);
    push(s,30);
    push(s,40);
    push(s,50);
    push(s,60);
    display(s);
    cout<<pop(s)<<endl;
    pop(s);
    cout<<top(s)<<endl;
    pop(s);
    cout<<pop(s)<<endl;
    
}
