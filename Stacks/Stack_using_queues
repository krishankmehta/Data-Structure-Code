//To implement stack using queues





#include <iostream>
#include <queue>

using namespace std;

struct stack {
    queue<int> q1;
    queue<int> q2;
    int curr_size = 0;
    void push(int data);
    int pop();
};

void stack::push(int data)
{
    q1.push(data);
}

int stack::pop()
{
    if (q1.empty()) {
        cout << "The queue is already empty" << endl;
        return 0;
    }
    while (q1.size() != 1) {
        q2.push(q1.front());
        q1.pop();
    }
    int value = q1.front();
    q1.pop();
    queue<int> q = q1;
    q1 = q2;
    q2 = q1;
    return value;
}


int main()
{
    stack s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.push(50);
    s.push(60);
    cout << s.pop() << endl;
    cout << s.pop() << endl;
    cout << s.pop() << endl;
    s.push(70);
    cout << s.pop() << endl;
}
