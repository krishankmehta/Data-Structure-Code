//To find the size form a given binary tree





#include<iostream>
#include<queue>

using namespace std;


struct node
{
    int data;
    node* left;
    node* right;
};


node* get_node(node* root,int data)
{
    node* temp = new node;
    temp->data = data;
    temp->right  = NULL;
    temp->left = NULL;
    return temp;
}


node* insert(node* root, int data)
{
    if(root==NULL)
    {
        root = get_node(root,data);
        return root;
    }
    else if(root->data<=data)
    {
        root->right = insert(root->right,data);
        return root;
    }
    
    else if(root->data>=data)
    {
        root->left = insert(root->left,data);
        return root;
    }
    
}


int find_size(node* root)
{
    static int count = 0;
    if(root==NULL)
    {
        return 0;
    }
   
    find_size(root->left);
    ++count;
    find_size(root->right);
    
    
    return count;
}



int main()
{
    node* root = NULL;
    root = insert(root,40);
    root = insert(root,60);
    root = insert(root,20);
    root = insert(root,10);
    root = insert(root,80);
    root = insert(root,74);
    root = insert(root,8);
    root = insert(root,28);
    cout<<find_size(root);
  
}
