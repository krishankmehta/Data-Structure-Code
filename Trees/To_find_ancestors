//To find ancestors of a given tree





#include<iostream>
#include<queue>

using namespace std;


struct node
{
    int data;
    node* left;
    node* right;
};


node* get_node(node* root,int data)
{
    node* temp = new node;
    temp->data = data;
    temp->right  = NULL;
    temp->left = NULL;
    return temp;
}


node* insert(node* root, int data)
{
    if(root==NULL)
    {
        root = get_node(root,data);
        return root;
    }
    else if(root->data<=data)
    {
        root->right = insert(root->right,data);
        return root;
    }
    
    else if(root->data>=data)
    {
        root->left = insert(root->left,data);
        return root;
    }
    
}

void print(int array[],int count)
{
    for(int i=0;i<count;i++)
    {
    cout<<array[i]<<" ";
    }
    
}
bool print_ancestor(node* root,int number,int array[])
{
    
  static int count = 0;
  if(root==NULL)
    {
        return false;
    }
    
    else if(root->data == number)
    {   
       print(array,count);
       return true;
    }
   else if(root->data<number)
    {
       array[count]=root->data;
       ++count;
       print_ancestor(root->right,number,array);
    }
    else if(root->data>=number)
    {
       array[count]=root->data;
       ++count;
       print_ancestor(root->left,number,array);
    }
    
    
}


int main()
{
    node* root = NULL;
    root = insert(root,40);
    root = insert(root,60);
    root = insert(root,20);
    root = insert(root,10);
    root = insert(root,80);
    root = insert(root,74);
    root = insert(root,8);
    root = insert(root,28);
    int array[100];
    int number;
    cout<<"Enter the number"<<endl;
    cin>>number;
    print_ancestor(root,number,array);
}
