//To print node level wise





#include<iostream>
#include<queue>

using namespace std;


struct node
{
    int data;
    node* left;
    node* right;
};


node* get_node(node* root,int data)
{
    node* temp = new node;
    temp->data = data;
    temp->right  = NULL;
    temp->left = NULL;
    return temp;
}


node* insert(node* root, int data)
{
    if(root==NULL)
    {
        root = get_node(root,data);
        return root;
    }
    else if(root->data<=data)
    {
        root->right = insert(root->right,data);
        return root;
    }
    
    else if(root->data>=data)
    {
        root->left = insert(root->left,data);
        return root;
    }
    
}

int find_height(node* root)
{
    int height =0;
    queue<node*> q;
    q.push(root);
    node *node = NULL;
    int node_count = 0;
    while(1)
    {
        
        
        int node_count = q.size();
        if(node_count==0)
        return height;
        
        while(node_count>0)
        {
            node  = q.front();
            cout<<node->data<<" ";
            q.pop();
            if(node->left!=NULL)
            q.push(node->left);
            if(node->right!=NULL)
            q.push(node->right);
            --node_count;
            
            
        }
        cout<<endl;
      
        ++height;
    }
      
}


int main()
{
    node* root = NULL;
    root = insert(root,40);
    root = insert(root,60);
    root = insert(root,20);
    root = insert(root,10);
    root = insert(root,80);
    root = insert(root,74);
    root = insert(root,8);
    root = insert(root,28);
    cout<<"The height of the tree is : "<<find_height(root)<<endl;
}
